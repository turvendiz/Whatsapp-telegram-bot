const { Client, LocalAuth } = require('whatsapp-web.js');
const TelegramBot = require('node-telegram-bot-api');
const qrcode = require('qrcode-terminal');

// –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

if (!TELEGRAM_TOKEN || !TELEGRAM_CHAT_ID) {
    console.error('‚ùå –û–®–ò–ë–ö–ê: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_TOKEN –∏ TELEGRAM_CHAT_ID');
    process.exit(1);
}

console.log('üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞
const telegramBot = new TelegramBot(TELEGRAM_TOKEN, { polling: true });

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ WhatsApp –∫–ª–∏–µ–Ω—Ç–∞ —Å puppeteer-core
const whatsappClient = new Client({
    authStrategy: new LocalAuth(),
    puppeteer: {
        headless: true,
        executablePath: '/usr/bin/google-chrome-stable', // –ü—É—Ç—å –∫ Chrome –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        args: [
            '--no-sandbox',
            '--disable-setuid-sandbox',
            '--disable-dev-shm-usage',
            '--disable-accelerated-2d-canvas',
            '--no-first-run',
            '--no-zygote',
            '--single-process',
            '--disable-gpu',
            '--disable-software-rendering',
            '--disable-features=VizDisplayCompositor',
            '--disable-features=TranslateUI',
            '--disable-background-timer-throttling',
            '--disable-backgrounding-occluded-windows',
            '--disable-renderer-backgrounding'
        ]
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π WhatsApp
whatsappClient.on('qr', qr => {
    console.log('\n=== –°–ö–ê–ù–ò–†–£–ô–¢–ï QR-–ö–û–î –í WHATSAPP ===');
    qrcode.generate(qr, { small: true });
    console.log('–û—Ç–∫—Ä–æ–π—Ç–µ WhatsApp ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí WhatsApp Web ‚Üí –°–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –≤—ã—à–µ\n');
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º QR –≤ Telegram (–≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞)
    telegramBot.sendMessage(TELEGRAM_CHAT_ID, `üì± *–°–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –≤ WhatsApp:*\n\`${qr}\``, { parse_mode: 'Markdown' })
        .catch(err => console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ QR –≤ Telegram:', err));
});

whatsappClient.on('ready', () => {
    console.log('‚úÖ WhatsApp –∫–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤!');
    telegramBot.sendMessage(TELEGRAM_CHAT_ID, '‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! WhatsApp –ø–æ–¥–∫–ª—é—á–µ–Ω.')
        .catch(err => console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:', err));
});

whatsappClient.on('authenticated', () => {
    console.log('üîê WhatsApp –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω');
});

whatsappClient.on('auth_failure', msg => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ WhatsApp:', msg);
    telegramBot.sendMessage(TELEGRAM_CHAT_ID, '‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ WhatsApp')
        .catch(err => console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', err));
});

whatsappClient.on('disconnected', (reason) => {
    console.log('üîå WhatsApp –æ—Ç–∫–ª—é—á–µ–Ω:', reason);
    telegramBot.sendMessage(TELEGRAM_CHAT_ID, `üîå WhatsApp –æ—Ç–∫–ª—é—á–µ–Ω: ${reason}`)
        .catch(err => console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', err));
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π WhatsApp
whatsappClient.on('message', async message => {
    try {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –≥—Ä—É–ø–ø –∏ —Å—Ç–∞—Ç—É—Å–æ–≤
        if (message.from === 'status@broadcast') return;
        
        const contact = await message.getContact();
        const chat = await message.getChat();
        
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Å–∞–º–æ–≥–æ —Å–µ–±—è
        if (contact.isMe) return;
        
        const senderName = contact.pushname || contact.shortName || contact.number;
        const text = `üì± *WhatsApp* –æ—Ç ${senderName}:\n${message.body || '(–º–µ–¥–∏–∞—Ñ–∞–π–ª)'}`;
        
        await telegramBot.sendMessage(TELEGRAM_CHAT_ID, text, { parse_mode: 'Markdown' });
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram:', message.body?.substring(0, 50) || '(–º–µ–¥–∏–∞)');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ Telegram
telegramBot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    const response = `üëã –í–∞—à Chat ID: \`${chatId}\`\n–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∫–∞–∫ TELEGRAM_CHAT_ID`;
    telegramBot.sendMessage(chatId, response, { parse_mode: 'Markdown' });
});

telegramBot.onText(/\/status/, async (msg) => {
    const chatId = msg.chat.id;
    telegramBot.sendMessage(chatId, '‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω. –ü—Ä–æ–≤–µ—Ä—è—é —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ...');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ Telegram
telegramBot.on('error', (error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ Telegram –±–æ—Ç–∞:', error);
});

telegramBot.on('polling_error', (error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ polling Telegram:', error);
});

// Graceful shutdown
process.on('SIGINT', async () => {
    console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...');
    await whatsappClient.destroy();
    process.exit(0);
});

// –ó–∞–ø—É—Å–∫ WhatsApp –∫–ª–∏–µ–Ω—Ç–∞
whatsappClient.initialize();

console.log('üöÄ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –û–∂–∏–¥–∞–Ω–∏–µ QR-–∫–æ–¥–∞...');
